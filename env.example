# Cipher Environment Configuration
# Copy this file to .env and modify the values as needed

# =============================================================================
# CORE CONFIGURATION
# =============================================================================

# Environment mode
NODE_ENV=development

# Logging configuration
CIPHER_LOG_LEVEL=info
REDACT_SECRETS=true

# =============================================================================
# LLM PROVIDER API KEYS
# =============================================================================

# OpenAI API Key (required for embedding functionality)
OPENAI_API_KEY=sk-your-openai-api-key-here

# Anthropic API Key (optional)
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here

# OpenRouter API Key (optional)
OPENROUTER_API_KEY=sk-or-your-openrouter-api-key-here

# OpenAI Configuration
OPENAI_BASE_URL=https://api.openai.com/v1
OPENAI_ORG_ID=org-your-organization-id

# Ollama Configuration
OLLAMA_BASE_URL=http://localhost:11434

# =============================================================================
# EMBEDDING CONFIGURATION
# =============================================================================

# Embedding model to use
EMBEDDING_MODEL=text-embedding-3-small

# Embedding request timeout (milliseconds)
EMBEDDING_TIMEOUT=30000

# Maximum retry attempts for embedding requests
EMBEDDING_MAX_RETRIES=3

# =============================================================================
# STORAGE CONFIGURATION
# =============================================================================

# Cache storage type (redis, in-memory)
STORAGE_CACHE_TYPE=in-memory

# Redis cache configuration (if using redis)
STORAGE_CACHE_HOST=localhost
STORAGE_CACHE_PORT=6379
STORAGE_CACHE_PASSWORD=your-redis-password
STORAGE_CACHE_DATABASE=0

# Database storage type (sqlite, in-memory)
STORAGE_DATABASE_TYPE=in-memory

# SQLite database configuration (if using sqlite)
STORAGE_DATABASE_PATH=./data/cipher.db
STORAGE_DATABASE_NAME=cipher

# =============================================================================
# VECTOR STORAGE CONFIGURATION
# =============================================================================

# Vector store type (qdrant, in-memory)
VECTOR_STORE_TYPE=in-memory

# Qdrant configuration (if using qdrant)
VECTOR_STORE_HOST=localhost
VECTOR_STORE_PORT=6333
VECTOR_STORE_URL=http://localhost:6333
VECTOR_STORE_API_KEY=your-qdrant-api-key

# Vector store settings
VECTOR_STORE_COLLECTION=default
VECTOR_STORE_DIMENSION=1536
VECTOR_STORE_DISTANCE=Cosine
VECTOR_STORE_ON_DISK=false
VECTOR_STORE_MAX_VECTORS=10000

# =============================================================================
# KNOWLEDGE GRAPH CONFIGURATION
# =============================================================================

# Enable knowledge graph functionality
KNOWLEDGE_GRAPH_ENABLED=false

# Knowledge graph backend type (neo4j, in-memory)
KNOWLEDGE_GRAPH_TYPE=in-memory

# Neo4j configuration (if using neo4j)
KNOWLEDGE_GRAPH_ENABLED=true
KNOWLEDGE_GRAPH_TYPE=neo4j
KNOWLEDGE_GRAPH_HOST=localhost
KNOWLEDGE_GRAPH_PORT=7687
KNOWLEDGE_GRAPH_USERNAME=neo4j
KNOWLEDGE_GRAPH_PASSWORD=28112005
KNOWLEDGE_GRAPH_DATABASE=neo4j
KNOWLEDGE_GRAPH_URI=bolt://localhost:7687