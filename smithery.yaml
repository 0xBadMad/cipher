runtime: 'container'
build:
  dockerfile: 'Dockerfile'
  dockerBuildPath: '.'
startCommand:
  type: 'http'
  command:
    [
      'sh',
      '-c',
      'node dist/src/app/index.cjs --mode mcp --mcp-transport-type http --port $PORT --host 0.0.0.0 --agent ${CONFIG_FILE:-/app/memAgent/cipher.yml}',
    ]
  configSchema:
    type: object
    description: 'Configuration for Cipher MCP server - memory-powered AI agent framework'
    properties:
      llmProvider:
        type: string
        description: 'LLM provider to use (openai, anthropic, gemini, etc.)'
        default: 'openai'
      llmModel:
        type: string
        description: 'LLM model name'
        default: 'gpt-4o-mini'
      llmApiKey:
        type: string
        description: 'API key for the LLM provider'
      embeddingProvider:
        type: string
        description: 'Embedding provider (openai, gemini, ollama, etc.)'
        default: 'openai'
      embeddingModel:
        type: string
        description: 'Embedding model name'
        default: 'text-embedding-3-small'
      embeddingApiKey:
        type: string
        description: 'API key for embedding provider'
    required:
      - llmApiKey
      - embeddingApiKey
    exampleConfig:
      llmProvider: 'openai'
      llmModel: 'gpt-4o-mini'
      llmApiKey: 'sk-...'
      embeddingProvider: 'openai'
      embeddingModel: 'text-embedding-3-small'
      embeddingApiKey: 'sk-...'
http:
  port: 3000
  healthCheckPath: '/health'
