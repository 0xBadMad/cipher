# describes the mcp servers to use
mcpServers: 
  filesystem:
    type: stdio
    command: npx
    args:
      - -y
      - '@modelcontextprotocol/server-filesystem'
      - .

# describes the llm configuration
llm:
  provider: openai
  model: gpt-4.1-mini
  apiKey: $OPENAI_API_KEY
  maxIterations: 50
  # provider: anthropic
  # model: claude-3-5-haiku-20241022
  # apiKey: $ANTHROPIC_API_KEY
  # maxIterations: 50
  # provider: openrouter
  # model: google/gemini-2.5-pro
  # apiKey: $OPENROUTER_API_KEY
  # maxIterations: 50

# Evaluation LLM configuration (non-thinking model for evaluation step)
# evalLlm:
#   provider: anthropic
#   model: claude-3-7-sonnet-20250219
#   apiKey: $ANTHROPIC_API_KEY

# --- AWS Bedrock LLM Configuration (Active Example) ---
# llm:
#   provider: aws
#   model: us.anthropic.claude-3-5-sonnet-20241022-v2:0  # Or another Bedrock-supported model
#   maxIterations: 50
#   aws:
#     region: $AWS_REGION
#     accessKeyId: $AWS_ACCESS_KEY_ID
#     secretAccessKey: $AWS_SECRET_ACCESS_KEY
  # sessionToken: $AWS_SESSION_TOKEN   # (uncomment if needed)

# --- Azure OpenAI LLM Configuration (Sample, Commented Out) ---
# llm:
#   provider: azure
#   model: gpt-4o-mini  # Or your Azure deployment/model name
#   apiKey: $AZURE_OPENAI_API_KEY
#   maxIterations: 50
#   azure:
#     endpoint: $AZURE_OPENAI_ENDPOINT
#     deploymentName: gpt-4o-mini  # Optional, defaults to model name

# --- Ollama LLM Configuration (Sample, Commented Out) ---
# llm:
#   provider: ollama
#   model: qwen3:32b      # Use the model you downloaded
#   maxIterations: 50
#   baseURL: $OLLAMA_BASE_URL

# Embedding configuration (optional)
# If not specified, uses environment-based auto-detection with priority: OpenAI > Gemini > Ollama
# YAML config takes priority over environment auto-detection

# embedding:
#   type: openai                 # openai, gemini, ollama
#   model: text-embedding-3-small # Provider-specific model
#   apiKey: $OPENAI_API_KEY      # API key (environment variable)
#   dimensions: 1536             # Optional: custom dimensions
#   timeout: 30000               # Optional: request timeout (ms)
#   maxRetries: 3                # Optional: max retry attempts

# Examples for different providers:
# OpenAI (default, reliable):
# embedding:
#   type: openai
#   model: text-embedding-3-small
#   apiKey: $OPENAI_API_KEY

# Gemini (free alternative):
# embedding:
#   type: gemini
#   model: gemini-embedding-001
#   apiKey: $GEMINI_API_KEY

# Ollama (self-hosted):
# embedding:
#   type: ollama
#   model: mxbai-embed-large
#   baseUrl: $OLLAMA_BASE_URL

# Disable embeddings entirely:
# embedding:
#   disabled: true

# System prompt - User customizable
# This prompt will be combined with built-in tool usage instructions
systemPrompt:
  enabled: true
  content: |
    You are an AI programming assistant focused on coding and reasoning tasks. You excel at:
    - Writing clean, efficient code
    - Debugging and problem-solving
    - Code review and optimization
    - Explaining complex technical concepts
    - Reasoning through programming challenges
